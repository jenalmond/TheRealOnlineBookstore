@page "/admin/transactions"

@inherits OwningComponentBase<ITransactionRepository>

<TransactionTable TableTitle="Uncollected Transactions"
                  Transactions="UncollectedTransactions"
                  ButtonLabel="Collected"
                  TransactionSelected="CollectTransaction">

</TransactionTable>
<TransactionTable TableTitle="Collected Transactions"
                  Transactions="CollectedTransactions"
                  ButtonLabel="Reset"
                  TransactionSelected="ResetTransaction">

</TransactionTable>
<button class="btn btn-info" @onclick="@(x=>UpdateData())">Refresh Data</button>

@code {
    public ITransactionRepository repo => Service;

    public IEnumerable<Transaction> AllTransactions { get; set; }
    public IEnumerable<Transaction> UncollectedTransactions { get; set; }
    public IEnumerable<Transaction> CollectedTransactions { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        AllTransactions = await repo.Transactions.ToListAsync();
        UncollectedTransactions = AllTransactions.Where(x => !x.TransactionReceived);
        CollectedTransactions = AllTransactions.Where(x => x.TransactionReceived);
    }
    public void CollectTransaction(int id) => UpdateTransaction(id, true);
    public void ResetTransaction(int id) => UpdateTransaction(id, false);
    private void UpdateTransaction(int id, bool transaction)
    {
        Transaction t = repo.Transactions.FirstOrDefault(x => x.CheckoutID == id);
        t.TransactionReceived = transaction;
        repo.SaveTransaction(t);
    }
}